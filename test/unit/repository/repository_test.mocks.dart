// Mocks generated by Mockito 5.4.4 from annotations
// in yandex_todo_list/test/unit/repository/repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i3;
import 'package:yandex_todo_list/src/core/data/dio_client.dart' as _i4;
import 'package:yandex_todo_list/src/core/database/db_service.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabase_1 extends _i1.SmartFake implements _i3.Database {
  _FakeDatabase_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i4.DioClient {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i5.Future<Map<String, Object?>?> deleteTodo(
    String? path,
    String? uuid, {
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [
            path,
            uuid,
          ],
          {
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);

  @override
  _i5.Future<Map<String, Object?>?> getTodoList(
    String? path, {
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [path],
          {
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);

  @override
  _i5.Future<Map<String, Object?>?> getTodo(
    String? path,
    String? uuid, {
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [
            path,
            uuid,
          ],
          {
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);

  @override
  _i5.Future<Map<String, Object?>?> updateTodoList(
    String? path, {
    required Map<String, Object?>? body,
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodoList,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);

  @override
  _i5.Future<Map<String, Object?>?> addTodo(
    String? path, {
    required Map<String, Object?>? body,
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [path],
          {
            #body: body,
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);

  @override
  _i5.Future<Map<String, Object?>?> changeTodo(
    String? path,
    String? uuid, {
    required Map<String, Object?>? body,
    Map<String, Object?>? headers,
    Map<String, String?>? queryParams,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeTodo,
          [
            path,
            uuid,
          ],
          {
            #body: body,
            #headers: headers,
            #queryParams: queryParams,
          },
        ),
        returnValue: _i5.Future<Map<String, Object?>?>.value(),
        returnValueForMissingStub: _i5.Future<Map<String, Object?>?>.value(),
      ) as _i5.Future<Map<String, Object?>?>);
}

/// A class which mocks [DbService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDbService extends _i1.Mock implements _i6.DbService {
  @override
  _i5.Future<_i3.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i5.Future<_i3.Database>.value(_FakeDatabase_1(
          this,
          Invocation.getter(#database),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Database>.value(_FakeDatabase_1(
          this,
          Invocation.getter(#database),
        )),
      ) as _i5.Future<_i3.Database>);

  @override
  _i5.Future<Map<String, Object?>> getTodo(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getTodo,
          [id],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<Map<String, Object?>> addTodo(Map<String, Object?>? todo) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTodo,
          [todo],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<Map<String, Object?>> getTodoList() => (super.noSuchMethod(
        Invocation.method(
          #getTodoList,
          [],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<Map<String, Object?>> updateTodo(Map<String, Object?>? todo) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodo,
          [todo],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<Map<String, Object?>> deleteTodo(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTodo,
          [id],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);

  @override
  _i5.Future<int> getRevision() => (super.noSuchMethod(
        Invocation.method(
          #getRevision,
          [],
        ),
        returnValue: _i5.Future<int>.value(0),
        returnValueForMissingStub: _i5.Future<int>.value(0),
      ) as _i5.Future<int>);

  @override
  _i5.Future<void> setRevision(int? revision) => (super.noSuchMethod(
        Invocation.method(
          #setRevision,
          [revision],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<Map<String, Object?>> updateTodoList(
          Map<String, Object?>? newTodoList) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTodoList,
          [newTodoList],
        ),
        returnValue:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
        returnValueForMissingStub:
            _i5.Future<Map<String, Object?>>.value(<String, Object?>{}),
      ) as _i5.Future<Map<String, Object?>>);
}
